stages:
- validate
- generate
- compile
- test
- sast
- pre-release
- release
- delivery
- publish
- deploy

include:
- project: $SCI_PROJECT_TEMPLATES
  file: 
  - flow/validate/complete.gitlab-ci.yml
  - flow/release/semantic.gitlab-ci.yml
  ref: $SCI_TEMPLATE_VERSION

cache:
- !reference [.senior-ci-cache]
- key:
    files:
    - requirements.txt
    - requirements-dev.txt
  paths:
  - .cache/pip
  policy: pull

validate:
  before_script:
  - python3 -m venv ./venv
  - source ./venv/bin/activate
  - pip3 install -r requirements-dev.txt
  script:
  - isort . --skip senior-ci --skip venv --check --diff --color
  - black . --extend-exclude senior-ci --check --diff --color
  - pylint **/**.py --ignore senior-ci,venv
  cache:
  - !reference [.senior-ci-cache]
  - key:
      files:
      - requirements.txt
      - requirements-dev.txt
    paths:
    - .cache/pip

validate_dependencies:
  stage: validate
  trigger:
    include: .gl2.gitlab-ci.yml
    strategy: depend
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - requirements-dev.txt
        - requirements.txt

compile:
  script:
  - echo "No compile to run"
  rules:
  - if: $CI_COMMIT_TAG
    when: never

unit_test:
  script:
  - echo "No tests to run"

sonar_scanner:
  script:
  - bash senior-ci/ci/ci.sh -x

deploy:
  stage: deploy
  script:
  - bash senior-ci/ci/ci.sh -u
  rules:
  - if: $CI_COMMIT_TAG

